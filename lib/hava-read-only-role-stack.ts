import * as cdk from 'aws-cdk-lib';
import * as iam from 'aws-cdk-lib/aws-iam';
import { Construct } from 'constructs';

export interface IEnvProperties extends cdk.StackProps {
  havaAwsAccount: string;
  havaExternalId: string;
}

export class HavaReadOnlyRoleStack extends cdk.Stack {
  constructor(scope: Construct, id: string, props: IEnvProperties) {
    super(scope, id, props);

    const { havaAwsAccount, havaExternalId } = props;

    // Create the IAM role
    const havaRole = new iam.Role(this, 'HavaReadOnlyAccessRole', {
      roleName: 'HavaReadOnlyAccessRole',
      assumedBy: new iam.AccountPrincipal(`${havaAwsAccount}`),
      externalIds: [havaExternalId],
    });

    const havaReadOnlyPolicy = new iam.PolicyDocument({
      statements: [
        new iam.PolicyStatement({
          actions: [
            'acm:DescribeCertificate',
            'acm:GetCertificate',
            'acm:ListCertificates',
            'apigateway:GET',
            'appstream:Get*',
            'autoscaling:Describe*',
            'cloudformation:List*',
            'cloudfront:Get*',
            'cloudfront:List*',
            'cloudsearch:Describe*',
            'cloudsearch:List*',
            'cloudtrail:DescribeTrails',
            'cloudtrail:GetTrailStatus',
            'cloudwatch:Describe*',
            'cloudwatch:Get*',
            'cloudwatch:List*',
            'codecommit:BatchGetRepositories',
            'codecommit:Get*',
            'codecommit:GitPull',
            'codecommit:List*',
            'codedeploy:Batch*',
            'codedeploy:Get*',
            'codedeploy:List*',
            'config:Deliver*',
            'config:Describe*',
            'config:Get*',
            'datapipeline:DescribeObjects',
            'datapipeline:DescribePipelines',
            'datapipeline:EvaluateExpression',
            'datapipeline:GetPipelineDefinition',
            'datapipeline:ListPipelines',
            'datapipeline:QueryObjects',
            'datapipeline:ValidatePipelineDefinition',
            'directconnect:Describe*',
            'ds:Check*',
            'ds:Describe*',
            'ds:Get*',
            'ds:List*',
            'ds:Verify*',
            'dynamodb:DescribeGlobalTable',
            'dynamodb:DescribeTable',
            'dynamodb:ListGlobalTables',
            'dynamodb:ListTables',
            'dynamodb:ListTagsOfResource',
            'ec2:Describe*',
            'ec2:GetConsoleOutput',
            'ecr:BatchCheckLayerAvailability',
            'ecr:GetDownloadUrlForLayer',
            'ecr:DescribeRepositories',
            'ecr:ListImages',
            'ecr:BatchGetImage',
            'ecs:Describe*',
            'ecs:List*',
            'eks:Describe*',
            'eks:List*',
            'elasticache:Describe*',
            'elasticache:List*',
            'elasticbeanstalk:Check*',
            'elasticbeanstalk:Describe*',
            'elasticbeanstalk:List*',
            'elasticbeanstalk:RequestEnvironmentInfo',
            'elasticbeanstalk:RetrieveEnvironmentInfo',
            'elasticfilesystem:DescribeMountTargets',
            'elasticfilesystem:DescribeTags',
            'elasticfilesystem:DescribeFileSystems',
            'elasticfilesystem:DescribeMountTargetSecurityGroups',
            'elasticloadbalancing:Describe*',
            'elasticmapreduce:Describe*',
            'elasticmapreduce:List*',
            'elastictranscoder:List*',
            'elastictranscoder:Read*',
            'es:DescribeElasticsearchDomain',
            'es:DescribeElasticsearchDomains',
            'es:DescribeElasticsearchDomainConfig',
            'es:ListDomainNames',
            'es:ListTags',
            'es:ESHttpGet',
            'es:ESHttpHead',
            'events:DescribeRule',
            'events:ListRuleNamesByTarget',
            'events:ListRules',
            'events:ListTargetsByRule',
            'events:TestEventPattern',
            'firehose:Describe*',
            'firehose:List*',
            'glacier:ListVaults',
            'glacier:DescribeVault',
            'glacier:GetDataRetrievalPolicy',
            'glacier:GetVaultAccessPolicy',
            'glacier:GetVaultLock',
            'glacier:GetVaultNotifications',
            'glacier:ListJobs',
            'glacier:ListMultipartUploads',
            'glacier:ListParts',
            'glacier:ListTagsForVault',
            'glacier:DescribeJob',
            'glacier:GetJobOutput',
            'iam:GenerateCredentialReport',
            'iam:Get*',
            'iam:List*',
            'inspector:Describe*',
            'inspector:Get*',
            'inspector:List*',
            'iot:Describe*',
            'iot:Get*',
            'iot:List*',
            'kinesis:Describe*',
            'kinesis:Get*',
            'kinesis:List*',
            'kms:Describe*',
            'kms:Get*',
            'kms:List*',
            'lambda:List*',
            'lambda:Get*',
            'logs:Describe*',
            'logs:Get*',
            'logs:TestMetricFilter',
            'machinelearning:Describe*',
            'machinelearning:Get*',
            'mobilehub:GetProject',
            'mobilehub:ListAvailableFeatures',
            'mobilehub:ListAvailableRegions',
            'mobilehub:ListProjects',
            'mobilehub:ValidateProject',
            'mobilehub:VerifyServiceRole',
            'opsworks:Describe*',
            'opsworks:Get*',
            'organizations:ListAccounts',
            'rds:Describe*',
            'rds:ListTagsForResource',
            'redshift:Describe*',
            'redshift:ViewQueriesInConsole',
            'route53:Get*',
            'route53:List*',
            'route53domains:CheckDomainAvailability',
            'route53domains:GetDomainDetail',
            'route53domains:GetOperationDetail',
            'route53domains:ListDomains',
            'route53domains:ListOperations',
            'route53domains:ListTagsForDomain',
            's3:GetAccelerateConfiguration',
            's3:GetAnalyticsConfiguration',
            's3:GetBucket*',
            's3:GetInventoryConfiguration',
            's3:GetLifecycleConfiguration',
            's3:GetMetricsConfiguration',
            's3:GetReplicationConfiguration',
            's3:List*',
            'sdb:GetAttributes',
            'sdb:List*',
            'sdb:Select*',
            'ses:Get*',
            'ses:List*',
            'sns:Get*',
            'sns:List*',
            'sqs:GetQueueAttributes',
            'sqs:ListQueues',
            'sqs:ReceiveMessage',
            'storagegateway:Describe*',
            'storagegateway:List*',
            'swf:Count*',
            'swf:Describe*',
            'swf:Get*',
            'swf:List*',
            'tag:Get*',
            'trustedadvisor:Describe*',
            'waf:Get*',
            'waf:List*',
            'waf-regional:Get*',
            'waf-regional:List*',
            'wafv2:ListResourcesForWebACL',
            'wafv2:ListWebACLs',
            'wafv2:ListTagsForResource',
            'wafv2:GetWebACL',
            'workspaces:Describe*',
          ],
          resources: ['*'],
          effect: iam.Effect.ALLOW,
        }),
      ],
    });

    havaRole.attachInlinePolicy(
      new iam.Policy(this, 'HavaReadOnlyPolicy', {
        policyName: 'HavaReadOnlyPolicy',
        document: havaReadOnlyPolicy,
      }),
    );

    // Output the ARN of the IAM role
    new cdk.CfnOutput(this, 'HavaReadOnlyArn', {
      value: havaRole.roleArn,
    });
  }
}
